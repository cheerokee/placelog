<?php
/**
 * @var \Base\Controller\BaseFunctions $function
 */
$function = new \Base\Controller\BaseFunctions();

$title  =   "Painel de Authorizações";
$key    =   $function->strToFriendlyUrl($title);

$form = $this->form;

?>
<script src="/js/admin/angular.min.js"></script>
<div id="ribbon">
    <span class="ribbon-button-alignment">
        <span id="refresh" class="btn btn-ribbon" data-action="resetWidgets" data-title="refresh"  rel="tooltip" data-placement="bottom" data-original-title="<i class='text-warning fa fa-warning'></i> Warning! This will reset all your widget settings." data-html="true">
            <i class="fa fa-refresh"></i>
        </span>
    </span>
    <ol class="breadcrumb">
        <li>
            <a href="<?=$this->url('admin');?>">Dashboard</a>
        </li>
        <li class="active">
            Painel de Autorização
        </li>
    </ol>
</div>
<div ng-app="panel-authorize" class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <h2 style="margin: 0px 0px 20px 0px;"><?=$title?> <small>- Gerencie as Autorizações</small></h2>
        </div>
        <div class="col-md-12">
            <ul class="nav nav-tabs" id="myTab" role="tablist">
                <li class="item active">
                    <a class="nav-link" id="privileges-tab" data-toggle="tab" href="#privileges" role="tab" aria-controls="privileges" aria-selected="false">
                        Gerenciador de Privilégios
                    </a>
                </li>
                <li class="item">
                    <a class="nav-link active" id="possibility-tab" data-toggle="tab" href="#possibility" role="tab" aria-controls="possibility" aria-selected="false">
                        Gerenciador de Possibilidades
                    </a>
                </li>
            </ul>
            <div class="tab-content" id="myTabContent">
                <div class="tab-pane fade active in" id="privileges" role="tabpanel" aria-labelledby="privileges-tab">
                    <div class="row">
                        <?=$this->partial('auth-privileges');?>
                    </div>
                </div>
                <div class="tab-pane fade" id="possibility" role="tabpanel" aria-labelledby="possibility-tab">
                    <div class="row">
                        <?=$this->partial('auth-possibility');?>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    angular.module('panel-authorize', [])
        .controller('AuthorizeController', ['$scope','$http','$timeout', function($scope,$http,$timeout) {
            $scope.data             =   {};

            $scope.resources        =   [];
            $scope.actions          =   [];
            $scope.acts             =   [];
            $scope.possibilities    =   [];

            $scope.resource         =   null;
            $scope.action           =   null;

            $scope.btnadd           =   true;
            $scope.btnedit          =   false;
            $scope.has_error        =   false;

            $http({
                url: "/api/resource",
                async: false,
                type: "GET",
                dataType: "json"
            }).then(function successCallback(response) {
                $scope.resources = response.data._embedded.resource;
            }, function errorCallback(response) {
                $.notify({
                    icon: 'pe-7s-close-circle',
                    message: "Ops, houve um erro ao consultar os recursos!"
                },{
                    type: 'info',
                    timer: 4000
                });
            });

            $http({
                url: "/api/action",
                async: false,
                type: "GET",
                dataType: "json"
            }).then(function successCallback(response) {
                $scope.actions = response.data._embedded.action;
            }, function errorCallback(response) {
                $.notify({
                    icon: 'pe-7s-close-circle',
                    message: "Ops, houve um erro ao consultar as ações!"
                },{
                    type: 'info',
                    timer: 4000
                });
            });

            $scope.load = function () {
                $http({
                    url: "/admin/get-possibilities",
                    async: false,
                    type: "GET",
                    dataType: "json"
                }).then(function successCallback(response) {
                    $scope.possibilities = response.data;
                }, function errorCallback(response) {
                    $.notify({
                        icon: 'pe-7s-close-circle',
                        message: "Ops, houve um erro ao consultar as possibilidades!"
                    },{
                        type: 'info',
                        timer: 4000
                    });
                });
            };

            $scope.load();

            $scope.addPossibility = function () {
                var error = false;

                $.ajax({
                    url: "/api/possibility",
                    type: "GET",
                    data: {
                        'filter'    :   [
                            {
                                'type' : 'andx',
                                'conditions' : [
                                    {'field' :'action', 'type':'eq', 'value' : $scope.action},
                                    {'field' :'resource', 'type':'eq', 'value' : $scope.resource},
                                ],
                                'where'  :  'and'
                            }
                        ]
                    },
                    dataType: "json",
                    success: function (response) {
                        //Não pode ser definida a ação mais de uma vez para o mesmo recurso.
                        if(response.total_items > 0)
                        {
                            $.notify({
                                icon: 'pe-7s-close-circle',
                                message: "Ops, já foi definida essa ação para o recurso!"
                            }, {
                                type: 'danger',
                                timer: 4000
                            });
                            error = true;
                        }
                    },
                    error: function(jqXHR, textStatus, errorThrown) {
                        console.log(textStatus, errorThrown);
                    }
                });

                $timeout(function () {
                    if(error === false) {
                        $http({
                            url: "/api/action/" + $scope.action,
                            async: false,
                            type: "GET",
                            dataType: "json"
                        }).then(function successCallback(response) {
                            for(var j = 0;j < $scope.acts.length; j++)
                            {
                                let act = $scope.acts[j];

                                if(act.id == response.data.id){
                                    $.notify({
                                        icon: 'pe-7s-close-circle',
                                        message: "Ops, você não pode incluir a mesma ação mais de uma vez!"
                                    }, {
                                        type: 'danger',
                                        timer: 4000
                                    });
                                    return false;
                                }
                            }
                            $scope.acts.push(response.data);
                            $scope.action = '';
                        }, function errorCallback(response) {
                            console.log(response.status);
                            $.notify({
                                icon: 'pe-7s-close-circle',
                                message: "Ops, houve um erro ao consultar a ação!"
                            }, {
                                type: 'info',
                                timer: 4000
                            });
                        });
                    }
                },300);
            };

            $scope.rmv = function (action) {
                $scope.acts.splice($scope.acts.indexOf(action), 1);
            };

            $scope.del = function (resource,action) {
                bootbox.confirm({
                    message: "Deseja excluir esse item?",
                    buttons: {
                        cancel: {
                            label: 'Não',
                            className: 'btn-danger'
                        },
                        confirm: {
                            label: 'Sim',
                            className: 'btn-success btnConfirm',
                        }
                    },
                    callback: function (result) {
                        if(!result){
                            this.modal('hide');
                        }else{

                            $.ajax({
                                url: "/api/possibility",
                                type: "GET",
                                data: {
                                    'filter'    :   [
                                        {
                                            'type' : 'andx',
                                            'conditions' : [
                                                {'field' :'action', 'type':'eq', 'value' : action},
                                                {'field' :'resource', 'type':'eq', 'value' : resource},
                                            ],
                                            'where'  :  'and'
                                        }
                                    ]
                                },
                                dataType: "json",
                                success: function (response) {
                                    let possibilities = response._embedded.possibility;

                                    $http({
                                        url: '/api/possibility/'+possibilities[0].id,
                                        method: "DELETE"
                                    }).then(function(response) {
                                            // success
                                            $.notify({
                                                icon: 'pe-7s-smile',
                                                message: "Registro deletado com sucesso!"
                                            },{
                                                type: 'success',
                                                timer: 4000
                                            });

                                            $scope.load();
                                        },
                                        function(response) {
                                            // failed
                                            if(response.status == 422)
                                            {
                                                $.notify({
                                                    icon: 'pe-7s-close-circle',
                                                    message: "Houve erro na exclusão do cadastro, erro: "+response.statusText
                                                },{
                                                    type: 'danger',
                                                    timer: 4000
                                                });
                                            }
                                        });
                                },
                                error: function(jqXHR, textStatus, errorThrown) {
                                    console.log(textStatus, errorThrown);
                                }
                            });

                        }
                    }
                });
            };

            $scope.add = function () {
                var actions = $scope.acts;

                if($scope.resource == null || $scope.resource == '' || $scope.acts.length < 1){
                    $scope.has_error = true;
                }

                var resource = null;

                if($scope.resource != null && $scope.resource != ''){
                    resource = $scope.getResource($scope.resource);
                    if(resource === null)
                        $scope.has_error = true;
                }

                if(!$scope.has_error) {
                    if (actions.length > 0) {
                        for (var i = 0; i < actions.length; i++) {
                            var action = actions[i];
                            $scope.data = {};
                            $scope.data.resource = resource.id;
                            $scope.data.action  = action.id;

                            $http({
                                url: '/api/possibility',
                                method: "POST",
                                data: $scope.data
                            }).then(function (response) {
                                    // success
                                    $.notify({
                                        icon: 'pe-7s-smile',
                                        message: "Possibilidades cadastrada com sucesso!"
                                    }, {
                                        type: 'success',
                                        timer: 4000
                                    });

                                    $scope.load();
                                    $scope.clear();
                                },
                                function (response) {
                                    // failed
                                    if (response.status == 422) {
                                        $.notify({
                                            icon: 'pe-7s-close-circle',
                                            message: "Houve erro na inclusão do cadastro erro: " + response.statusText
                                        }, {
                                            type: 'danger',
                                            timer: 4000
                                        });
                                    }
                                });
                        }
                    }
                }
            };

            $scope.edit = function(id) {

            };

            $scope.clear = function() {
                $scope.id       =   null;
                $scope.resouce  =   '';
                $scope.action   =   '';
                $scope.acts     =   [];
            };

            $scope.getAction = function(id)
            {
                var data = null;

                $.ajax({
                    url: "/api/action/" + id,
                    async: false,
                    type: "GET",
                    dataType: "json"
                }).done(function(response) {
                    var data = response;
                });

                return data;
            };

            $scope.getResource = function(id)
            {
                var data = null;
                $.ajax({
                    url: "/api/resource/" + id,
                    async: false,
                    type: "GET",
                    dataType: "json"
                }).done(function(response) {
                    data = response;
                    return response;
                });

                return data;
            };
        }])
        .controller('PrivilegeController', ['$scope','$http','$timeout', function($scope,$http,$timeout) {
            $scope.data             =   {};

            $scope.roles            =   [];
            $scope.resources        =   [];
            $scope.actions          =   [];
            $scope.privileges       =   [];
            $scope.possibilities    =   [];

            $scope.role           =   null;
            $scope.resource         =   null;
            $scope.action           =   null;

            $scope.btnadd           =   true;
            $scope.btnedit          =   false;
            $scope.has_error        =   false;

            $scope.load = function () {
                $http({
                    url: "/api/role",
                    async: false,
                    type: "GET",
                    dataType: "json"
                }).then(function successCallback(response) {
                    $scope.roles = response.data._embedded.role;
                }, function errorCallback(response) {
                    $.notify({
                        icon: 'pe-7s-close-circle',
                        message: "Ops, houve um erro ao consultar os perfis!"
                    },{
                        type: 'info',
                        timer: 4000
                    });
                });

                $http({
                    url: "/api/resource",
                    async: false,
                    type: "GET",
                    dataType: "json"
                }).then(function successCallback(response) {
                    $scope.resources = response.data._embedded.resource;
                }, function errorCallback(response) {
                    $.notify({
                        icon: 'pe-7s-close-circle',
                        message: "Ops, houve um erro ao consultar os recursos!"
                    },{
                        type: 'info',
                        timer: 4000
                    });
                });

                $http({
                    url: "/api/privilege",
                    async: false,
                    type: "GET",
                    dataType: "json"
                }).then(function successCallback(response) {
                    $scope.privileges = response.data._embedded.privilege;
                    console.log($scope.privileges);
                }, function errorCallback(response) {
                    $.notify({
                        icon: 'pe-7s-close-circle',
                        message: "Ops, houve um erro ao consultar os perfis!"
                    },{
                        type: 'info',
                        timer: 4000
                    });
                });
            };

            $scope.load();

            $scope.changeResource = function() {
                var data = [];
                $scope.possibilities = [];
                $scope.action = '';
                $.ajax({
                    url: "/api/possibility",
                    type: "GET",
                    data: {
                        'filter'    :   [
                            {
                                'type' : 'andx',
                                'conditions' : [
                                    {'field' :'resource', 'type':'eq', 'value' : $scope.resource},
                                ],
                                'where'  :  'and'
                            }
                        ]
                    },
                    dataType: "json",
                    success: function (response) {
                        data = response._embedded.possibility;
                    },
                    error: function(jqXHR, textStatus, errorThrown) {
                        console.log(textStatus, errorThrown);
                    }
                });

                $timeout(function(){
                    $scope.possibilities = data;
                },1000);
            };

            $scope.del = function (id) {
                bootbox.confirm({
                    message: "Deseja excluir esse item?",
                    buttons: {
                        cancel: {
                            label: 'Não',
                            className: 'btn-danger'
                        },
                        confirm: {
                            label: 'Sim',
                            className: 'btn-success btnConfirm',
                        }
                    },
                    callback: function (result) {
                        if(!result){
                            this.modal('hide');
                        }else{
                            $http({
                                url: '/api/privilege/' + id,
                                method: "DELETE"
                            }).then(function(response) {
                                // success
                                $.notify({
                                    icon: 'pe-7s-smile',
                                    message: "Registro deletado com sucesso!"
                                },{
                                    type: 'success',
                                    timer: 4000
                                });

                                $scope.load();
                            },
                            function(response) {
                                // failed
                                if(response.status == 422)
                                {
                                    $.notify({
                                        icon: 'pe-7s-close-circle',
                                        message: "Houve erro na exclusão do cadastro, erro: "+response.statusText
                                    },{
                                        type: 'danger',
                                        timer: 4000
                                    });
                                }
                            });
                        }
                    }
                });
            };

            $scope.add = function () {
                $scope.data = {};
                $scope.data.role        = $scope.role;
                $scope.data.resource    = $scope.resource;
                $scope.data.name        = $scope.action;
                console.log($scope.data);
                $http({
                    url: '/api/privilege',
                    method: "POST",
                    data: $scope.data
                }).then(function (response) {
                    // success
                    $.notify({
                        icon: 'pe-7s-smile',
                        message: "Privilégio cadastrado com sucesso!"
                    }, {
                        type: 'success',
                        timer: 4000
                    });

                    $scope.load();
                    $scope.action = '';
                },
                function (response) {
                    // failed
                    if (response.status == 422) {
                        $.notify({
                            icon: 'pe-7s-close-circle',
                            message: "Houve erro na inclusão do cadastro erro: " + response.statusText
                        }, {
                            type: 'danger',
                            timer: 4000
                        });
                    }
                });
            };

            $scope.clear = function() {
                $scope.id           =   null;
                $scope.role         =   '';
                $scope.resource     =   '';
                $scope.action       =   '';
                $scope.possibilities      =   [];
            };
        }]);;
</script>
