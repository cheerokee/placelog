<?php

namespace App\Controller;

use App\Entity\Integration;
use App\Entity\TypeApp;
use Base\Controller\CrudController;
use Register\Entity\Person;
use Zend\View\Model\ViewModel;

class AppController extends CrudController
{
    protected $route;

    public function __construct() 
    {
        $this->title = "Aplicações";

        $this->table = 'App';
        $this->entity = 'App\Entity\\'.$this->table ;
        $this->service = 'App\Service\\'.$this->table ;
        $this->form = 'App\Form\\'.$this->table ;
        $this->controller = "App";
        $this->route = "app/default";

        $this->_listView = array(
            'title' => $this->title,
            'icon' => 'fa fa-share-alt-square',
            'route' => $this->route,
            'controller' => $this->controller,
            'actions' => array(
                'enable' =>true,
                'customs' => array(
                    'configs' => array(
                        'rota' => 'app-configs',
                        'title' => 'Configurações',
                        'enable' => false,
                        'class' => 'btn btn-warning',
                        'icon' => 'fa fa-list',
                        'group' => false,
                    ),
                ),
                'defaults' => array(
                    'edit' => array(
                        'enable' => true,
                        'class' => 'btn btn-info',
                        'icon' => 'fa fa-edit'
                    ),
                    'delete' => array(
                        'enable' => true,
                        'class' => 'btn btn-danger decision',
                        'icon' => 'fa fa-trash'
                    ),
                    'view' => array(
                        'enable' => false,
                        'class' => 'btn btn-info',
                        'icon' => 'fa fa-eye'
                    ),
                ),
            ),
            'fields' => array(
                'id'=>array(
                    'label' => 'Código',
                    'list' => true,
                ),
                'name'=>array(
                    'label' => 'Nome',
                    'list' => true,
                ),
                'type_app'=>array(
                    'label' => 'Tipo de Aplicação',
                    'list' => true,
                ),
                'integration'=>array(
                    'label' => 'Integração',
                    'list' => true,
                ),
                'company'=>array(
                    'label' => 'Empresa',
                    'list' => true,
                )
            ),
        );
    }

    public function  indexAction($list = null)
    {
        return parent::indexAction($list); // TODO: Change the autogenerated stub
    }

    public function editAction($request = null)
    {
        $em = $this->getEm();
        /**
         * @var ZF\ContentNegotiation\Request $request
         */
        $request = $this->getRequest();

        if($request->isPost()) {
            /**
             * @var Parameters $data
             */
            $data = $request->getPost();
            $data_arr = $data->toArray();

            if($data_arr['company'] != null){
                $db_company = $em->getRepository('Register\Entity\Person')->findOneById($data['company']);

                if($db_company instanceof Person)
                {
                    $data_arr['company'] = $db_company;
                }
            }

            if($data_arr['type_app'] != null){
                $db_type_app = $em->getRepository('App\Entity\TypeApp')->findOneById($data['type_app']);

                if($db_type_app instanceof TypeApp)
                {
                    $data_arr['type_app'] = $db_type_app;
                }
            }

            if($data_arr['integration'] != null){
                $db_integration = $em->getRepository('App\Entity\Integration')->findOneById($data['integration']);

                if($db_integration instanceof Integration)
                {
                    $data_arr['integration'] = $db_integration;
                }
            }

            $data->fromArray($data_arr);

            $request->setPost($data);
        }

        return parent::editAction($request); // TODO: Change the autogenerated stub
    }

    public function newAction($request = null)
    {
        $em = $this->getEm();
        /**
         * @var ZF\ContentNegotiation\Request $request
         */
        $request = $this->getRequest();

        if($request->isPost()) {
            /**
             * @var Parameters $data
             */
            $data = $request->getPost();
            $data_arr = $data->toArray();

            if($data_arr['company'] != null){
                $db_company = $em->getRepository('Register\Entity\Person')->findOneById($data['company']);

                if($db_company instanceof Person)
                {
                    $data_arr['company'] = $db_company;
                }
            }

            if($data_arr['type_app'] != null){
                $db_type_app = $em->getRepository('App\Entity\TypeApp')->findOneById($data['type_app']);

                if($db_type_app instanceof TypeApp)
                {
                    $data_arr['type_app'] = $db_type_app;
                }
            }

            if($data_arr['integration'] != null){
                $db_integration = $em->getRepository('App\Entity\Integration')->findOneById($data['integration']);

                if($db_integration instanceof Integration)
                {
                    $data_arr['integration'] = $db_integration;
                }
            }

            $data->fromArray($data_arr);

            $request->setPost($data);
        }

        return parent::newAction($request); // TODO: Change the autogenerated stub
    }

    public function appConfigsAction(){
        $em = $this->getEm();
        $db_app = $em->getRepository('App\Entity\App')->findOneById($this->params()->fromRoute('id'));

        $request = $this->getRequest();
        if($request->isPost()){
            $post = $request->getPost()->toArray();
        }

        return new ViewModel(array('app' => $db_app,'em' => $em));
    }
}
