<script src="/js/admin/angular.min.js"></script>
<div ng-app="consulta-frete-interface" ng-controller="ConsultaFreteController as conf" class="col-md-12">
    <div class="card">
        <div class="header">
            <h4 class="title">Consultar Frete</h4>
            <p class="category text-justify">
                Função responsável por retornar o valor do frete e seu prazo de
                entrega para a mercadoria informada.
            </p>
        </div>
        <div class="content">
            <div class="row">

                <div class="col-md-12">
                    <div class="row">
                        <div class="col-md-3 form-group">
                            <label>CEP Origem *</label>
                            <input class="form-control cep" ng-model="cepOrigem">
                        </div>
                        <div class="col-md-3 form-group">
                            <label>CEP Destino *</label>
                            <input class="form-control cep" ng-model="cepDestino">
                        </div>
                        <div class="col-md-3 form-group">
                            <label>Tipo Pessoa Destinatário</label>
                            <select class="form-control" ng-model="tipo" ng-value="tipo" ng-change="changeType()" >
                                <option value="0" selected>Física</option>
                                <option value="1">Jurídica</option>
                            </select>
                        </div>
                        <div class="col-md-3 form-group">
                            <label>Documento do Destinatário <i title="INFORMAÇÃO QUE AJUDARÁ A IDENTIFICAR POSSÍVEIS TAXAS ADICIONAIS (TRT, TDE OU TDA)" class="pe-7s-info"></i></label>
                            <input class="form-control" ng-blur="validaDoc()" ng-model="docDest" >
<!--                            ng-class="tipo ? 'cnpj' : 'cpf'"-->
                        </div>
                    </div>
                    <hr />
                </div>
                <div class="col-md-12">
                    <div class="row">
                        <div class="col-md-6 form-group">
                            <labe>Exibição Resultados</labe>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="exibeRes" id="sr1" ng-model="exibeRes" ng-value="0" checked>
                                <label class="form-check-label" for="sr1">
                                    Apenas Registros que Possuem Valores
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="exibeRes" id="sr2" ng-model="exibeRes" ng-value="1">
                                <label class="form-check-label" for="sr2">
                                    Apenas o Menor Preço
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="exibeRes" id="sr3" ng-model="exibeRes" ng-value="2">
                                <label class="form-check-label" for="sr3">
                                    Todos os Registros ( Com ou sem Valores )
                                </label>
                            </div>
                        </div>
                        <div class="col-md-6 form-group">
                            <labe>Tipo Ordenação</labe>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="ordenar" id="of1" ng-model="ordenar" ng-value="0" checked>
                                <label class="form-check-label" for="of1">
                                    Ordenar Pelo Preço
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="ordenar" id="of2" ng-model="ordenar" ng-value="1">
                                <label class="form-check-label" for="of2">
                                    Ordenar Pelo Prazo
                                </label>
                            </div>
                        </div>
                    </div>
                    <hr />
                </div>

                <div class="col-md-12 form-group">
                    <labe>Inserir Produtos</labe>
                    <div class="row">
                        <div class="col-md-8">
                            <input class="form-control" id="produtoFind" ng-="search()"   ng-model="produtoFind" placeholder="Buscar por Nome" >
                            <input type="hidden"        id="produtoFindId"  ng-model="produtoFindId" >
                        </div>
                        <div class="col-md-4">
                            <button ng-click="add" class="btn btn-primary form-control">Inserir</button>
                        </div>
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <hr />
                    <labe>Lista Produtos *</labe>
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Descrição</th>
                                <th>Quantidade</th>
                                <th>Preço</th>
                                <th>Peso</th>
                                <th>Cubagem</th>
                                <th>Volume</th>
                                <th>Ação</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr ng-repeat="sku in data">
                                <td>{{ sku._embedded.product.id }} - {{ sku._embedded.product.name }} ( {{ sku.id }} - {{ sku.name }} )</td>
                                <td><input class="form-control moeda" onkeypress="mascara(this,moeda)" ng-model="sku.qtde" placeholder="Insira a Quantidade" /></td>
                                <td><input class="form-control moeda" onkeypress="mascara(this,moeda)" ng-model="sku.price" placeholder="Insira o Preço" /></td>
                                <td><input class="form-control moeda" onkeypress="mascara(this,moeda)" ng-model="sku.weight" placeholder="Insira o Peso" /></td>
                                <td><input class="form-control moeda" onkeypress="mascara(this,moeda)" ng-model="sku.cubagem" placeholder="Insira a Cubagem" /></td>
                                <td><input class="form-control moeda" onkeypress="mascara(this,moeda)" ng-model="sku.volume" placeholder="Insira o Volume" /></td>
                                <td><button class="btn btn-danger text-danger" ng-click="del(sku)"><i class="pe-7s-close-circle"></i></button></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="col-md-12">
                    <hr />
                    <button class="btn btn-primary">Consultar</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    angular.module('consulta-frete-interface', []).controller('ConsultaFreteController', ['$scope','$http','$timeout', function($scope,$http,$timeout) {
        $scope.cepOrigem    = '';
        $scope.cepDestino   = '';
        $scope.docDest      = '';
        $scope.exibeRes     = 0;
        $scope.ordenar      = 0;
        $timeout(function () {
            $scope.tipo         = 0;
            $scope.changeType();
        },300);


        $scope.produtoFind = '';
        $scope.produtoFindId = -1;

        $scope.data = [];

        $scope.loadSkus = function () {
            $.ajax({
                url: "/api/sku",
                async: false,
                type: "GET",
                data: {
                    'filter': [
                        <?php
                        if(isset($_SESSION['empresa']) && $_SESSION['empresa'] != null){
                            ?>
                            {
                                'type' : 'innerjoin',
                                'field' : 'product',
                                'alias' : 'p'
                            },
                            {
                                'type' : 'eq',
                                'alias' : 'p',
                                'field' : 'company',
                                'value' : '<?=$_SESSION['empresa']?>'
                            }
                            <?php
                        }
                        ?>
                    ]
                },
                dataType: "json"
            }).done(function(response) {
                var contador = 1;
                var json = "[";
                for (i in response._embedded.sku)
                {
                    var product = response._embedded.sku[i]._embedded.product;
                    var sku = response._embedded.sku[i];
                    json += "{\"value\" : \""+sku.id+"\" , \"label\": \""+product.id+" - "+product.name+" ("+sku.id+" - "+sku.name+")\"}";

                    if(contador < response._embedded.sku.length){
                        json += ",";
                        contador++;
                    }
                }
                json += "]";

                var idfield = 'produtoFind';
                var idfieldid = 'produtoFindId';

                $("#produtoFind").autocomplete({
                    source: JSON.parse(json),
                    open: function (event, ui) {
                        $('#' + idfieldid).val('');
                    },
                    select: function (event, ui) {
                        $('#' + idfield).val(ui.item.label);
                        $('#' + idfieldid).val(ui.item.value);

                        $.ajax({
                            url: "/api/sku/"+ui.item.value,
                            async: false,
                            type: "GET",
                            dataType: "json"
                        }).done(function(data) {
                            data.qtde       = 0;
                            data.price      = 0;
                            data.weight     = 0;
                            data.cubagem    = 0;
                            data.volume     = 0;

                            $scope.data.push(data);
                        });
                        return false;
                    }
                }).blur(function () {
                    if ($('#' + idfield).val() == '') {
                        $('#' + idfield).val('');
                        $('#' + idfieldid).val('');
                    }

                    if ($('#' + idfieldid).val() == '') {
                        $('#' + idfield).val('');
                    }
                });
            });
        };

        $scope.add = function() {
            $scope.data.push({ id : 1,name : 'Teste'});
        };
        
        $scope.del = function (sku) {
            console.log($scope.data.indexOf(sku));
            $scope.data.splice($scope.data.indexOf(sku), 1);
        };

        $scope.changeType = function() {
            $scope.docDest = '';

            if($scope.tipo == 1){
                $(".cnpj").mask("99.999.999/9999/99");
            }else{
                $(".cpf").mask("999.999.999-99");
            }
        };

        var typingTimer;
        var doneTypingInterval = 100;

        $('#produtoFind').keyup(function() {
            clearTimeout(typingTimer);
            if ($('#produtoFind').val) {
                typingTimer = setTimeout(doneTyping, doneTypingInterval);
            }
        });

        function doneTyping() {
            $scope.loadSkus();
        }

        $scope.validaDoc = function () {
            var doc = $scope.docDest;
            console.log(doc);
            var result = true;
            if($scope.tipo == 1){
                result =  $scope.validaCnpj(doc);
            }else{
                result =  $scope.validaCpf(doc);
            }

            var tipoDoc = ($scope.tipo == 1)?'CNPJ':'CPF';
            if(!result) {
                $.notify({
                    icon: 'pe-7s-close',
                    message: "Documento preenchido incorretamente, deve ser preenchido com "+tipoDoc+" do destinatário!"
                }, {
                    type: 'danger',
                    timer: 4000
                });

                $scope.docDest = '';
            }
        }

        $scope.validaCpf = function (cpf) {
            exp = /\.|\-/g;
            cpf = cpf.toString().replace( exp, "" );

            var digitoDigitado = eval(cpf.charAt(9)+cpf.charAt(10));
            var soma1=0, soma2=0;
            var vlr =11;

            for(i=0;i<9;i++){
                soma1+=eval(cpf.charAt(i)*(vlr-1));
                soma2+=eval(cpf.charAt(i)*vlr);
                vlr--;
            }
            soma1 = (((soma1*10)%11)==10 ? 0:((soma1*10)%11));
            soma2=(((soma2+(2*soma1))*10)%11);

            var digitoGerado=(soma1*10)+soma2;

            if(digitoGerado!=digitoDigitado) {
                return false;
            }else{
                return true;
            }
        }

        $scope.validaCnpj = function (cnpj) {

            cnpj = cnpj.replace(/[^\d]+/g,'');

            if(cnpj == '') return false;

            if (cnpj.length != 14)
                return false;

            // Elimina CNPJs invalidos conhecidos
            if (cnpj == "00000000000000" ||
                cnpj == "11111111111111" ||
                cnpj == "22222222222222" ||
                cnpj == "33333333333333" ||
                cnpj == "44444444444444" ||
                cnpj == "55555555555555" ||
                cnpj == "66666666666666" ||
                cnpj == "77777777777777" ||
                cnpj == "88888888888888" ||
                cnpj == "99999999999999")
                return false;

            // Valida DVs
            tamanho = cnpj.length - 2
            numeros = cnpj.substring(0,tamanho);
            digitos = cnpj.substring(tamanho);
            soma = 0;
            pos = tamanho - 7;
            for (i = tamanho; i >= 1; i--) {
                soma += numeros.charAt(tamanho - i) * pos--;
                if (pos < 2)
                    pos = 9;
            }
            resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
            if (resultado != digitos.charAt(0))
                return false;

            tamanho = tamanho + 1;
            numeros = cnpj.substring(0,tamanho);
            soma = 0;
            pos = tamanho - 7;
            for (i = tamanho; i >= 1; i--) {
                soma += numeros.charAt(tamanho - i) * pos--;
                if (pos < 2)
                    pos = 9;
            }
            resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
            if (resultado != digitos.charAt(1))
                return false;

            return true;

        }
    }]);
</script>
